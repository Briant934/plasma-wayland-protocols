<?xml version="1.0" encoding="UTF-8"?>
<protocol name="zkde_screencast_unstable_v1">
  <copyright><![CDATA[
      SPDX-FileCopyrightText: 2020 Aleix Pol Gonzalez <aleixpol@kde.org>

    SPDX-License-Identifier: LGPL-2.1-or-later
  ]]></copyright>
    <interface name="zkde_screencast_unstable_v1" version="1">
        <description summary="Protocol for managing Pipewire feeds of the different displays and windows."/>

        <request name="stream_output">
            <description summary="requests a feed from a given source"/>
            <arg name="stream" type="new_id" interface="zkde_screencast_stream_unstable_v1"/>
            <arg name="output" type="object" interface="wl_output"/>
        </request>
        <request name="stream_window">
            <description summary="requests a feed from a given source"/>
            <arg name="stream" type="new_id" interface="zkde_screencast_stream_unstable_v1"/>
            <arg name="window_id" type="uint" summary="window Identifier"/>
        </request>

        <request name="destroy" type="destructor">
            <description summary="Destroy the zkde_screencast_unstable_v1">
            Destroy the zkde_screencast_unstable_v1 object. Also disables all zkde_screencast_stream_unstable_v1 issued through this this object.
            </description>
        </request>
    </interface>

    <interface name="zkde_screencast_stream_unstable_v1" version="1">
        <request name="close">
            <description summary="requests closing a pipewire buffer"/>
        </request>
        <event name="closed">
            <description summary="notifies about being done with the pipewire buffer"/>
        </event>

        <event name="created">
            <description summary="Notifies about a pipewire feed being created"/>
            <arg name="node" type="uint" summary="node of the pipewire buffer"/>
            <arg name="width" type="uint" summary="streamed video height"/>
            <arg name="height" type="uint" summary="streamed video height"/>
        </event>
        <event name="failed">
            <description summary="Offers an error message so the client knows created will not arrive"/>
            <arg name="error" type="string" summary="error message"/>
        </event>
    </interface>
</protocol>
